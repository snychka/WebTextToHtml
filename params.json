{"name":"WebTextToHtml","tagline":"ASP.NET MVC C# Demo (vim2Html)","body":"# WebTextToHtml (vim2Html)\r\n\r\nCopyright Stefan Nychka, BSD 3-Clause license, LICENSE.txt\r\n\r\nThe main purpose of this code is to demonstrate my ability to program an ASP.NET\r\nMVC web application, secondarily to convert vim text to html.  There may be\r\nbetter programs that accept such text, consider it markup, and produce the\r\ncorresponding html.\r\n\r\nTOC\r\n- [Conversion Explanation](#conversion-explanation)\r\n- [Running Code (short)](#running-code-short)\r\n- [Running Code (detailed)](#running-code-detailed)\r\n- [Environment (what to install and configuration settings)](#environment-what-to-install-and-configuration-settings)\r\n- [vim Settings](#vim-settings) \r\n- [Improvements](#improvements)\r\n\r\n##Conversion Explanation\r\n\r\nvim2Html takes a text file, most conveniently created by vim (see [vim Settings](#vim-settings)\r\nfor details), and creates corresponding html.  It is easiest explained via some\r\nexamples of the resulting html in the &lt;body&gt; tag.  And, you can try it\r\nout to see!\r\n\r\n<ul>\r\n\r\n    <li>\r\n  <strong>Example 1</strong> text:\r\n\r\n<pre>a paragraph</pre>\r\n\r\n\r\n   Resulting html:\r\n\r\n<pre>&lt;p&gt;\r\na paragraph\r\n&lt;/p&gt;</pre>\r\n</li>\r\n\r\n\r\n        <li>\r\n  <strong>Example 2</strong> text:\r\n\r\n<pre>- a list and bullet</pre>\r\n\r\n\r\n   Resulting html:\r\n\r\n<pre>&lt;ul&gt;\r\n  &lt;li&gt;\r\n  a list and bullet\r\n  &lt;/li&gt;\r\n&lt;/ul&gt;</pre>\r\n</li>\r\n\r\n           <li>\r\n  <strong>Example 3</strong> text:\r\n\r\n<pre>a paragraph\r\n- a list and bullet\r\n  - an indented bullet\r\n  - 2nd indented bullet\r\n- 2nd outer bullet\r\n- a longer line with a url, http://www.notarealsite.com/ . note how\r\n  subsequent newlines in a bullet should be sufficiently indented\r\na new paragraph\r\n\r\n2 subsequent paragraphs must be separated by a space</pre>\r\n   Resulting html:\r\n\r\n<pre>&lt;p&gt;\r\na paragraph\r\n&lt;/p&gt;\r\n&lt;ul&gt;\r\n  &lt;li&gt;\r\n  a list and bullet\r\n  &lt;ul&gt;\r\n    &lt;li&gt;\r\n    an indented bullet\r\n    &lt;/li&gt;\r\n    &lt;li&gt;\r\n    2nd indented bullet\r\n    &lt;/li&gt;\r\n  &lt;/ul&gt;\r\n  &lt;/li&gt;\r\n  &lt;li&gt;\r\n  2nd outer bullet\r\n  &lt;/li&gt;\r\n  &lt;li&gt;\r\n  a longer line with a url, &lt;a href=\"http://www.notarealsite.com/,\" target=\"_blank\"&gt;http://www.notarealsite.com/&lt;/a&gt; . note how\r\n  subsequent newlines in a bullet should be sufficiently indented\r\n  &lt;/li&gt;\r\n&lt;/ul&gt;\r\n&lt;p&gt;\r\na new paragraph\r\n&lt;/p&gt;\r\n&lt;p&gt;\r\n2 subsequent paragraphs must be separated by a space\r\n&lt;/p&gt;\r\n</pre>\r\n</li>\r\n\r\n</ul>\r\n\r\n\r\n##Running Code (short)\r\n\r\nSee the [Running Code (detailed)](#running-code-detailed) section for further info.\r\n\r\n1. Unzip the project\r\n1. Run Visual Studio (VS) as an Admin, and open WebTextToHtml.sln\r\n1. Press F5 to run the code.\r\n1. Change the url to https://<span></span>localhost:44300\r\n1. Ignore the SSL err. msg. and continue to the website ... that's basically it!\r\n\r\n##Running Code (detailed)\r\n\r\nSee the [Environment](#environment-what-to-install-and-configuration-settings) section for further information what to install and configuration settings.\r\n\r\n##Environment (what to install and configuration settings)\r\n\r\nGeneral Settings\r\n- Windows 8, IE 10\r\n  - IE10 Standards mode\r\n  - default Internet and Local Internet security settings\r\n- SqlExpress v11.0.3128\r\n\r\nIIS Express\r\n- used VS 12 pro, yet project was more up-to-date (EF 6, MVC 5)\r\n  - Debug mode\r\n- Localdb (with no existing Text2HtmlContext db)\r\n- https://<span></span>localhost:44300\r\n\r\nTested a web package deploy to IIS\r\n- 1st set up db\r\n  - had empty SqlExpress db called Text2HtmlRelease\r\n  - added Login &quot;IIS APPPOOL\\DefaultAppPool&quot;\r\n    - gave it reader, writer and ddladmin roles\r\n- IIS 8\r\n  - directly on https://<span></span>localhost, Default Web Site\r\n  - ssl enabled, self-signed cert\r\n\r\n##vim Settings\r\n\r\nvim is a text editor used on Linux-based systems, http://www.vim.org\r\n\r\nSee Conversion Explanation section for some examples\r\n\r\nimportant settings:  \r\n`autoindent shiftwidth=2 shiftwidth=2 tabstop=2 expandtab`\r\n\r\ncomplete settings\r\n\r\n```\r\nautoindent          ignorecase          scroll=11           textwidth=80\r\nbackspace=2         modelines=0         shiftwidth=2        ttyfast\r\nexpandtab           modified            softtabstop=2       ttymouse=xterm\r\nhelplang=en         pastetoggle=<C-P>   tabstop=2           window=0\r\nfileencoding=utf-8\r\nfileencodings=ucs-bom,utf-8,default,latin1\r\nwildmode=longest,list\r\n```\r\n\r\n##Improvements\r\n\r\nMany planned improvements to pick away at.  In no particular order, and not necessarily a complete list:\r\n\r\n- make directly available a deployment package\r\n- put the site up somewhere, likely Azure\r\n  - create a legit. cert.\r\n- allow users to store multiple documents\r\n- secure the connection strings\r\n- consolidate the project names\r\n- redesign using models as opposed to sessions (maybe)\r\n  - ensure no over-posting\r\n- improve the parsing errors\r\n- ensure any text in textarea remains after 'Upload and Convert' is clicked with no file chosen\r\n- allow user to set different whitespace (tabs, amount)\r\n- allow to set title (in html) of downloaded document\r\n- store files on file system, and only store loc. and likely checksum in db\r\n- test on multiple browsers\r\n- enforce better pswd. rules by instead using SqlMembershipProvider\r\n- read in tornado text from file, as opposed to hardcoding it into View (maybe)\r\n- use interfaces to allow for IoC and unit testing\r\n- figure out more portable version of wrap=off\r\n","google":"","note":"Don't delete this file! It's used internally to help with page regeneration."}